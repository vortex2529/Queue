#include <iostream>
#include <vector>
#include <queue>
using namespace std;

// T.C = O(N) S.C = O(K)
void firstNegativeElementInWindow(vector<int> &a,int k,vector<int>& ans){
  queue<int> q;

  // Process first k size window
  for(int i=0;i<k;i++){
    if(a[i]<0) q.push(i);
  }

  // loop 
  for(int i=k;i<a.size();i++){
    
    // answer of prev window 
    if(q.empty()){
      ans.push_back(0);
    }
    else{
      ans.push_back(a[q.front()]);
    }

    // remove out of window element
    while((!q.empty()) && (i-q.front() >= k)){
      q.pop();
    }
    
    // push curr element if  negative
    if(a[i] < 0) q.push(i);
  }

  if(!q.empty() && q.front() < 0){
    ans.push_back(a[q.front()]);
  }
  else{
    ans.push_back(0);
  }
}


int main() {
  vector<int> a = {12,-1,-7,8,-15,30,16,28};
  int k = 3;
  vector<int> ans;
  firstNegativeElementInWindow(a,k,ans);


  for(auto & e: ans) cout<<e<<" ";


  return 0;
}
